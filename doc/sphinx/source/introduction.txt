.. -*- Mode: rst -*-

==============
 Introduction
==============

PySpice is a `Python <http://python.org>`_ library which interplay with Berkeley SPICE, the
industrial circuit simulator reference.

SPICE (Simulation Program with Integrated Circuit Emphasis) was developed at the Electronics
Research Laboratory of the University of California, Berkeley in 1973 by Laurence Nagel with
direction from his research advisor, Prof. Donald Pederson. Then Spice emerged as an industrial
standard through its descendant and is still the reference 40 years later.

The aim of PySpice is to address several needs:

 * SPICE language is fine to describe a circuit, but it lacks a real language for circuit
   steering. By contrast Python is a powerful high level, oriented object and dynamic language which
   is perfectly suited for steering and reusing circuit. But it comes at the price its more general
   syntax is less fluent than SPICE for circuit description.

 * Ngspice provides some extension to Berkeley SPICE for data analysis, but its interactive
   environment or TCL module are now outdated. By contrast Python has scientific framework like `Numpy
   <http://www.numpy.org>`_ and `Matplotlib <http://matplotlib.org>`_ that compete with Matlab.

 * Ngspice source code is derived from Berkeley SPICE and thus has a very old basis. Moreover the
   sources are poorly documented. So it is really difficult to understand how it works and modify
   it. PySpice could serve to easily experiment extension.

As opposite to other SPICE derivatives, PySpice focus on programming and not on graphical user
interface. Thus it doesn't feature a schematic capture editor and we cannot pickup a node or an
element and plot the associated waveform.

The main features of PySpice are:

 * actually PySpice only supports the `Ngspice <http://ngspice.sourceforge.net>`_ flavour
 * an oriented-object API to describe circuit in a way similar to SPICE
 * a library and model manager that index recursively a directory
 * an incomplete SPICE parser (mainly used for the library and model indexer)
 * a SPICE server to run the simulator and to get back the result as Numpy array
 * some data analysis add-on

.. Warning:: Ngspice is provided without any warranty. Thus use it with care for real design. Best
	     is to cross check the simulation using others simulators.

.. Warning:: Simultation is a tool and not a perfect view of the real world.

.. End
